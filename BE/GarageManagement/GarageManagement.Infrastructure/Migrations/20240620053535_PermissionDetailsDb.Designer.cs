// <auto-generated />
using System;
using GarageManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GarageManagement.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240620053535_PermissionDetailsDb")]
    partial class PermissionDetailsDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GarageManagement.Domain.Entities.Authorization.PermissionDetails", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"), 1L, 1);

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermissionSymbol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PermissionId");

                    b.ToTable("PermissionDetailsDb");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.Authorization.RoleDetails", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("RoleDetailsDb");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.BusinessDetails", b =>
                {
                    b.Property<string>("BusinessDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("BusinessDetailsName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeOfBusinessDetailsId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("BusinessDetailsId");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.CompanyInfo", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CompanyPhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CompanyTax")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyWeb")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotePrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("CompanyId");

                    b.ToTable("CompanyInfoDb");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.CustomerInfo", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerPhonenumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CustomerTax")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerInfoDb");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.DepartmentDetails", b =>
                {
                    b.Property<string>("DepartmentId")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DepartmentNote")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.Factory", b =>
                {
                    b.Property<int>("FactoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactoryId"), 1L, 1);

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("FactoryId");

                    b.ToTable("Factories");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.Insurance", b =>
                {
                    b.Property<string>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("InsuranceAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InsuranceBank")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InsuranceBranch")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InsuranceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InsuranceNumberAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsuranceTax")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InsuranceId");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.Staff", b =>
                {
                    b.Property<string>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<int>("AccountActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("DayIn")
                        .HasColumnType("date");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("PremissionDay")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("StaffAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StaffPhonenumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.Supplier", b =>
                {
                    b.Property<string>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SupplierBank")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SupplierBranch")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SupplierPhonenumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SupplierTax")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.Vehicle", b =>
                {
                    b.Property<string>("TypeOfVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NameOfVehicle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("TypeOfVehicleId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.CategoryManagement.VehicleDetails", b =>
                {
                    b.Property<string>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ChassisNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LicensePlates")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TypeOfVehicleId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("VehicleColor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("VehicleId");

                    b.ToTable("VehicleDetailsDb");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.InboundManagement.AccessoryWarehouse", b =>
                {
                    b.Property<string>("SupplierSparePartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DayEnter")
                        .HasColumnType("datetime2");

                    b.Property<double?>("InputPrice")
                        .HasColumnType("float");

                    b.Property<string>("InvoiceEnterId")
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("RepairCardId")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SparePartDetailsId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SupplierId")
                        .HasColumnType("varchar(20)");

                    b.HasKey("SupplierSparePartId");

                    b.ToTable("AccessoryWarehouseDb");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.InboundManagement.Inbound", b =>
                {
                    b.Property<string>("InvoiceEnterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DayEnter")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RepairCodeId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SupplierId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("VAT")
                        .HasColumnType("float");

                    b.HasKey("InvoiceEnterId");

                    b.ToTable("InboundDb");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.InboundManagement.SparePart", b =>
                {
                    b.Property<string>("SparePartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SparePartContent")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("SparePartName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SparePartId");

                    b.ToTable("SparePartDb");
                });

            modelBuilder.Entity("GarageManagement.Domain.Entities.InboundManagement.SparePartDetails", b =>
                {
                    b.Property<string>("SparePartDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SparePartDetailsName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SparePartDetailsOtherName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SparePartId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SparePartPosition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("SparePartPrice")
                        .HasColumnType("float");

                    b.Property<string>("SparePartSupplierId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SparePartUnitCal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SparePartDetailsId");

                    b.ToTable("SparePartDetailsDb");
                });
#pragma warning restore 612, 618
        }
    }
}
